<?php

/**
 * @file
 * Message in Fabecook style.
 */

/**
 * Implements hook_theme().
 */
function message_fb_theme(){
  return array(
    'message_fb' =>  array(
      'template' => 'theme/message-fb',
      'render element' => 'entity'
    ),
    'babble__field_comment' =>  array(
      'template' => 'theme/babble--field-comment',
      'render element' => 'babble'
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add settings to field instance UI.
 */
function message_fb_form_field_ui_field_edit_form_alter(&$form, $form_state) {
  $instance = $form['#instance'];
  $form['instance']['settings']['message_fb'] = array(
    '#type' => 'checkbox',
    '#title' => t('Message Facebook style'),
    '#description' => t('When enabled, the Message-Facebook module will theme the Babble field using a Facebook style CSS and Javascript.'),
    '#default_value' => isset($instance['settings']['message_fb']) ? $instance['settings']['message_fb'] : FALSE,
  );
}

/**
 * Implements hook_field_create_instance().
 */
function message_fb_field_create_instance($instance) {
  _message_fb_field_crud_instance($instance);
}

/**
 * Implements hook_field_update_instance().
 */
function message_fb_field_update_instance($instance) {
  _message_fb_field_crud_instance($instance);
}

/**
 * Delete the Babble subject field.
 *
 * @param $instance
 *   The field instance of the host.
 */
function _message_fb_field_crud_instance($instance) {
  if (!message_fb_is_message_fb_instance($instance)) {
    return;
  }

  $field_name = $instance['field_name'];


  $body_instance = field_info_instance('babble', 'babble_subject', $field_name);
  $body_instance['babble'][$field_name]['babble_body']['widget']['settings']['rows'] = 1;
  field_update_instance($body_instance);

  $field = field_info_field($field_name);
  if (field_has_data($field)) {
    return;
  }

  // Delete the subject.
  $subject_instance = field_info_instance('babble', 'babble_subject', $field_name);
  field_delete_instance($subject_instance);
}

/**
 * Return TRUE if the field instance should be in Facebook style.
 *
 * @param $instance
 *   The field instance to check.
 */
function message_fb_is_message_fb_instance($instance) {
  $field = field_info_field($instance['field_name']);

  return $field['type'] == 'babble' && !empty($instance['settings']['message_fb']);
}

/**
 * Message preprocess.
 */
function message_fb_preprocess_message(&$variables) {
  global $user;

  // Check if we have a Babble field on the Message entity.
  $message = $variables['message'];
  foreach (field_info_instances('message', $message->type) as $field_name => $instance) {
    if (!message_fb_is_message_fb_instance($instance)) {
      continue;
    }

    $variables['babble_field'] = $field_name;
    $variables['theme_hook_suggestions'][] = 'message_fb';

    $babble_body_field = &$variables['content'][$field_name . '_babble_comment_form']['babble_body'][LANGUAGE_NONE][0]['value'];
    $babble_body_field['#title_display'] = 'invisible';

    // Add HTML5 required.
    $babble_body_field['#attributes']['required'] = 'required';
    $babble_body_field['#attributes']['placeholder'] = t('Write a comment...');

    $account = user_load($user->uid);
    $picture = theme('user_picture', array('account' => $account));
    $babble_body_field['#prefix'] = $picture ? $picture : '';

    // Add assets.
    $babble_body_field['#attached']['css'][] = drupal_get_path('module', 'message_fb') . '/css/message_fb.css';
    $babble_body_field['#attached']['js'][] = drupal_get_path('module', 'message_fb') . '/js/message_fb.js';

    $variables['content'][$field_name]['#label_display'] = 'hidden';
    $variables['content'][$field_name . '_babble_comment_form']['#prefix'] = '';
    $variables['content'][$field_name . '_babble_comment_form']['author']['_name']['#access'] = FALSE;

    // Get the user's picture.
    $account = user_load($message->uid);
    $picture = theme('user_picture', array('account' => $account));
    $variables['user_picture'] = $picture ? $picture : '';
  }
}

/**
 * Babble preprocess.
 */
function message_fb_preprocess_babble(&$variables) {
  $babble = $variables['babble'];
  dpm($variables);
  if ($babble->field_name != 'field_comment') {
    return;
  }
  $time_ago = format_interval(REQUEST_TIME - $babble->created);
  $variables['content']['time_ago'] = array(
    '#markup' => t('@time ago', array('@time' => $time_ago)),
    '#weight' => 99,
  );

  // Get the user's picture.
  $account = user_load($babble->uid);
  $picture = theme('user_picture', array('account' => $account));
  $variables['user_picture'] = $picture ? $picture : '';
}
